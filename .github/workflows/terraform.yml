name: 'Terraform GitHub Actions'
on:
  pull_request:
    branches:
      - master

jobs:
  common:
    name: 'common'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master

      - name: Configure AWS Credentials
        uses: clouddrove/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_ACCESS_SECRET_KEY }}
          aws-region: us-east-2

      - name: 'Terraform Format'
        uses: 'clouddrove/github-actions@CD-101'
        with:
          actions_subcommand: 'fmt'
  init:
    name: 'init'
    needs: common
    runs-on: ubuntu-latest
    steps:
      - name: 'Terraform init'
        uses: 'clouddrove/github-actions@CD-101'
        with:
          actions_subcommand: 'init'
          tf_actions_working_dir: ./_example/default-s3

      - name: 'Terraform init encryption-s3'
        uses: 'clouddrove/github-actions@CD-101'
        with:
          actions_subcommand: 'init'
          tf_actions_working_dir: ./_example/encryption-s3

      - name: 'Terraform init logging-encryption-s3'
        uses: 'clouddrove/github-actions@CD-101'
        with:
          actions_subcommand: 'init'
          tf_actions_working_dir: ./_example/logging-encryption-s3

      - name: 'Terraform init website-s3'
        uses: 'clouddrove/github-actions@CD-101'
        with:
          actions_subcommand: 'init'
          tf_actions_working_dir: ./_example/website-s3

      - name: 'Terraform init logging-s3'
        uses: 'clouddrove/github-actions@CD-101'
        with:
          actions_subcommand: 'init'
          tf_actions_working_dir: ./_example/logging-s3

  validate:
    name: 'init'
    needs: common
    runs-on: ubuntu-latest
    steps:
      - name: 'Terraform validate'
        uses: 'clouddrove/github-actions@CD-101'
        with:
          actions_subcommand: 'validate'
          tf_actions_working_dir: ./_example/default-s3

      - name: 'Terraform validate encryption-s3'
        uses: 'clouddrove/github-actions@CD-101'
        with:
          actions_subcommand: 'validate'
          tf_actions_working_dir: ./_example/encryption-s3

      - name: 'Terraform validate logging-s3'
        uses: 'clouddrove/github-actions@CD-101'
        with:
          actions_subcommand: 'validate'
          tf_actions_working_dir: ./_example/logging-s3

      - name: 'Terraform validate website-s3'
        uses: 'clouddrove/github-actions@CD-101'
        with:
          actions_subcommand: 'validate'
          tf_actions_working_dir: ./_example/website-s3

      - name: 'Terraform validate logging-encryption-s3'
        uses: 'clouddrove/github-actions@CD-101'
        with:
          actions_subcommand: 'validate'
          tf_actions_working_dir: ./_example/logging-encryption-s3

  plan:
    name: 'validate'
    runs-on: ubuntu-latest
    steps:
      - name: 'Terraform plan'
        uses: 'clouddrove/github-actions@CD-101'
        with:
          actions_subcommand: 'plan'
          tf_actions_working_dir: ./_example/default-s3

      - name: 'Terraform plan encryption-s3'
        uses: 'clouddrove/github-actions@CD-101'
        with:
          actions_subcommand: 'plan'
          tf_actions_working_dir: ./_example/encryption-s3

      - name: 'Terraform plan logging-encryption-s3'
        uses: 'clouddrove/github-actions@CD-101'
        with:
          actions_subcommand: 'plan'
          tf_actions_working_dir: ./_example/logging-encryption-s3

      - name: 'Terraform plan logging-s3'
        uses: 'clouddrove/github-actions@CD-101'
        with:
          actions_subcommand: 'plan'
          tf_actions_working_dir: ./_example/logging-s3

      - name: 'Terraform plan website-s3'
        uses: 'clouddrove/github-actions@CD-101'
        with:
          actions_subcommand: 'plan'
          tf_actions_working_dir: ./_example/website-s3

      - name: 'Slack Notification'
        uses: clouddrove/action-slack@v2
        with:
          status: ${{ job.status }}
          fields: repo,author
          author_name: 'CloudDrove'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # required
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_TERRAFORM }} # required
        if: always()
